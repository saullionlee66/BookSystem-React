{"ast":null,"code":"var _jsxFileName = \"/Users/saul/Documents/React/BookSystem/frontend/src/Context/Auth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { auth } from '../Auth/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthProvider = props => {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState(); //const [isLogin, setIsLogin] = useState(false);\n\n  var isLogin = false;\n\n  const setIsLogin = a => {\n    isLogin = true;\n    console.log(\"IsLogin: \" + isLogin);\n  };\n\n  const signup = (email, password) => {\n    return auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  const login = (email, password) => {\n    return auth.signInWithEmailAndPassword(email, password);\n  };\n\n  const logout = () => {\n    return auth.signOut();\n  };\n\n  const resetPassword = email => {\n    return auth.sendPasswordResetEmail(email);\n  };\n\n  const updateEmail = email => {\n    return currentUser.updateEmail(email);\n  };\n\n  const updatePassword = password => {\n    return currentUser.updatePassword(password);\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      console.log(user);\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n    isLogin,\n    setIsLogin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AuthProvider, \"weNTBXcC62DPmZO+PUtwIm8P/FM=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/saul/Documents/React/BookSystem/frontend/src/Context/Auth.js"],"names":["React","useState","useContext","useEffect","auth","AuthContext","createContext","useAuth","AuthProvider","props","currentUser","setCurrentUser","isLogin","setIsLogin","a","console","log","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","unsubscribe","onAuthStateChanged","user","value","children"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,UAAxB,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAkB;AAAA;;AACrB,SAAOL,UAAU,CAACG,WAAD,CAAjB;AACH;;GAFeE,O;;AAIhB,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAU;AAAA;;AAClC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C,CADkC,CAElC;;AAEA,MAAIW,OAAO,GAAG,KAAd;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACtBF,IAAAA,OAAO,GAAG,IAAV;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcJ,OAA1B;AACH,GAHD;;AAIA,QAAMK,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAChC,WAAOf,IAAI,CAACgB,8BAAL,CAAoCF,KAApC,EAA0CC,QAA1C,CAAP;AACH,GAFD;;AAIA,QAAME,KAAK,GAAG,CAACH,KAAD,EAAQC,QAAR,KAAqB;AAC/B,WAAOf,IAAI,CAACkB,0BAAL,CAAgCJ,KAAhC,EAAsCC,QAAtC,CAAP;AACH,GAFD;;AAIA,QAAMI,MAAM,GAAG,MAAM;AACjB,WAAOnB,IAAI,CAACoB,OAAL,EAAP;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAIP,KAAD,IAAW;AAC7B,WAAOd,IAAI,CAACsB,sBAAL,CAA4BR,KAA5B,CAAP;AACH,GAFD;;AAIA,QAAMS,WAAW,GAAIT,KAAD,IAAU;AAC1B,WAAOR,WAAW,CAACiB,WAAZ,CAAwBT,KAAxB,CAAP;AACH,GAFD;;AAKA,QAAMU,cAAc,GAAIT,QAAD,IAAa;AAChC,WAAOT,WAAW,CAACkB,cAAZ,CAA2BT,QAA3B,CAAP;AACH,GAFD;;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,WAAW,GAAGzB,IAAI,CAAC0B,kBAAL,CAAyBC,IAAI,IAAI;AACjDhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,IAAZ;AACApB,MAAAA,cAAc,CAACoB,IAAD,CAAd;AACH,KAHmB,CAApB;AAIA,WAAOF,WAAP;AACH,GANQ,EAMN,EANM,CAAT;AAQA,QAAMG,KAAK,GAAG;AACVtB,IAAAA,WADU;AAEVO,IAAAA,MAFU;AAGVI,IAAAA,KAHU;AAIVE,IAAAA,MAJU;AAKVE,IAAAA,aALU;AAMVE,IAAAA,WANU;AAOVC,IAAAA,cAPU;AAQVhB,IAAAA,OARU;AASVC,IAAAA;AATU,GAAd;AAYA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEmB,KAA7B;AAAA,cACKvB,KAAK,CAACwB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5DM;;IAAMzB,Y;;KAAAA,Y","sourcesContent":["import React, {useState,useContext,useEffect} from 'react'\nimport {auth} from '../Auth/firebase'\n\nconst AuthContext = React.createContext();\n\nexport function useAuth(){\n    return useContext(AuthContext)\n}\n\nexport const AuthProvider = (props) =>{\n    const [currentUser, setCurrentUser] = useState();\n    //const [isLogin, setIsLogin] = useState(false);\n    \n    var isLogin = false;\n\n    const setIsLogin = (a) => {\n        isLogin = true;\n        console.log(\"IsLogin: \" + isLogin)\n    }\n    const signup = (email, password) => {\n        return auth.createUserWithEmailAndPassword(email,password);\n    }\n    \n    const login = (email, password) => {\n        return auth.signInWithEmailAndPassword(email,password);\n    }\n\n    const logout = () => {\n        return auth.signOut();\n    }\n\n    const resetPassword = (email) => {\n        return auth.sendPasswordResetEmail(email);\n    }\n\n    const updateEmail = (email) =>{\n        return currentUser.updateEmail(email)\n    } \n\n\n    const updatePassword = (password) =>{\n        return currentUser.updatePassword(password)\n    } \n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged( user => { \n            console.log(user)\n            setCurrentUser(user);\n        })\n        return unsubscribe\n    }, [])\n\n    const value = {\n        currentUser,\n        signup,\n        login,\n        logout,\n        resetPassword,\n        updateEmail,\n        updatePassword,\n        isLogin,\n        setIsLogin\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}