{"ast":null,"code":"var _jsxFileName = \"/Users/saul/Documents/React/BookSystem/frontend/src/Components/UpdateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useAuth } from '../Context/Auth';\nimport { Link, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateProfile() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    currentUser,\n    updateEmail,\n    updatePassword\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n\n    if (passwordRef.current.value !== currentUser.password) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises).then(() => {\n      history.push(\"/\");\n    }).catch(err => setError(err.message)).finally(() => setLoading(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"updateprofile-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true,\n              defaultValue: currentUser.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              placeholder: \"Leave blank to keep the same\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password-confirmation\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password Confirmation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordConfirmRef,\n              placeholder: \"Leave blank to keep the same\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            type: \"submit\",\n            className: \"w-100\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateProfile, \"Q7k8y2z76iE2dhrIyPQhgFtHT4o=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["/Users/saul/Documents/React/BookSystem/frontend/src/Components/UpdateProfile.js"],"names":["React","useRef","useState","Form","Button","Card","Alert","useAuth","Link","useHistory","UpdateProfile","emailRef","passwordRef","passwordConfirmRef","currentUser","updateEmail","updatePassword","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault","current","value","promises","email","push","password","Promise","all","then","catch","err","message","finally"],"mappings":"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","sourcesContent":["import React, {useRef,useState} from 'react'\nimport {Form, Button, Card, Alert} from 'react-bootstrap'\nimport {useAuth} from '../Context/Auth'\nimport {Link,useHistory} from 'react-router-dom';\n\nfunction UpdateProfile() {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const {currentUser,updateEmail,updatePassword} = useAuth();\n    const [error,setError] = useState(\"\");\n    const [loading,setLoading] = useState(false)\n    const history = useHistory();\n\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError(\"Passwords do not match\");\n        }\n        const promises = [];\n        setLoading(true);\n        setError(\"\");\n        if(emailRef.current.value !== currentUser.email){\n            promises.push(updateEmail(emailRef.current.value));\n        }\n        if(passwordRef.current.value !== currentUser.password){\n            promises.push(updatePassword(passwordRef.current.value));\n        }\n\n        Promise.all(promises).then(()=>{\n            history.push(\"/\");\n        }).catch(err => setError(err.message)).finally(()=> setLoading(false))\n    \n        \n    }\n\n    return (\n        <div className=\"updateprofile-wrapper\">\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\" >Update Profile</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n  \n                <Form onSubmit={handleSubmit}>\n                    <Form.Group id=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" ref={emailRef} required \n                        defaultValue={currentUser.email} />\n                    </Form.Group>\n                    <Form.Group id=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" ref={passwordRef}  \n                        placeholder=\"Leave blank to keep the same\" \n                        />\n                    </Form.Group>\n                    <Form.Group id=\"password-confirmation\">\n                        <Form.Label>Password Confirmation</Form.Label>\n                        <Form.Control type=\"password\" ref={passwordConfirmRef}  \n                        placeholder=\"Leave blank to keep the same\"\n                        />\n                    </Form.Group>\n                    <Button disabled={loading} type=\"submit\" className=\"w-100\">Update</Button>\n                </Form>\n                </Card.Body>\n            </Card>\n                <div className=\"w-100 text-center mt-2\">\n                   <Link to=\"/\">Cancel</Link>\n                </div>\n\n        </div>\n    )\n}\n\nexport default UpdateProfile\n"]},"metadata":{},"sourceType":"module"}