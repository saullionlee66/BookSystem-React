{"ast":null,"code":"var _jsxFileName = \"/Users/saul/Documents/React/BookSystem/frontend/src/Context/Auth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { auth } from '../Auth/firebase';\nimport { useCookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthProvider = props => {\n  _s2();\n\n  const [cookies, setCookies] = useCookies();\n  const [currentUser, setCurrentUser] = useState();\n\n  const signup = (email, password) => {\n    return auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  const login = (email, password) => {\n    return auth.signInWithEmailAndPassword(email, password);\n  };\n\n  const logout = () => {\n    cookies.remove(\"isLogged\", {\n      path: \"/\"\n    });\n    return auth.signOut();\n  };\n\n  const resetPassword = email => {\n    return auth.sendPasswordResetEmail(email);\n  };\n\n  const updateEmail = email => {\n    return currentUser.updateEmail(email);\n  };\n\n  const updatePassword = password => {\n    return currentUser.updatePassword(password);\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AuthProvider, \"UOpmRkiCwCxoGT1diWxVPxyTYKw=\", false, function () {\n  return [useCookies];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/saul/Documents/React/BookSystem/frontend/src/Context/Auth.js"],"names":["React","useState","useContext","useEffect","auth","useCookies","AuthContext","createContext","useAuth","AuthProvider","props","cookies","setCookies","currentUser","setCurrentUser","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","remove","path","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","unsubscribe","onAuthStateChanged","user","value","children"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,UAAxB,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,UAAR,QAAyB,cAAzB;;AACA,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAkB;AAAA;;AACrB,SAAON,UAAU,CAACI,WAAD,CAAjB;AACH;;GAFeE,O;;AAIhB,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAU;AAAA;;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,UAAU,EAAxC;AAEA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,EAA9C;;AAEA,QAAMc,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAChC,WAAOb,IAAI,CAACc,8BAAL,CAAoCF,KAApC,EAA0CC,QAA1C,CAAP;AACH,GAFD;;AAIA,QAAME,KAAK,GAAG,CAACH,KAAD,EAAQC,QAAR,KAAqB;AAC/B,WAAOb,IAAI,CAACgB,0BAAL,CAAgCJ,KAAhC,EAAsCC,QAAtC,CAAP;AACH,GAFD;;AAIA,QAAMI,MAAM,GAAG,MAAM;AACjBV,IAAAA,OAAO,CAACW,MAAR,CAAe,UAAf,EAA2B;AAACC,MAAAA,IAAI,EAAC;AAAN,KAA3B;AACA,WAAOnB,IAAI,CAACoB,OAAL,EAAP;AACH,GAHD;;AAKA,QAAMC,aAAa,GAAIT,KAAD,IAAW;AAC7B,WAAOZ,IAAI,CAACsB,sBAAL,CAA4BV,KAA5B,CAAP;AACH,GAFD;;AAIA,QAAMW,WAAW,GAAIX,KAAD,IAAU;AAC1B,WAAOH,WAAW,CAACc,WAAZ,CAAwBX,KAAxB,CAAP;AACH,GAFD;;AAKA,QAAMY,cAAc,GAAIX,QAAD,IAAa;AAChC,WAAOJ,WAAW,CAACe,cAAZ,CAA2BX,QAA3B,CAAP;AACH,GAFD;;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,WAAW,GAAGzB,IAAI,CAAC0B,kBAAL,CAAyBC,IAAI,IAAI;AACjDjB,MAAAA,cAAc,CAACiB,IAAD,CAAd;AACH,KAFmB,CAApB;AAGA,WAAOF,WAAP;AACH,GALQ,EAKN,EALM,CAAT;AAOA,QAAMG,KAAK,GAAG;AACVnB,IAAAA,WADU;AAEVE,IAAAA,MAFU;AAGVI,IAAAA,KAHU;AAIVE,IAAAA,MAJU;AAKVI,IAAAA,aALU;AAMVE,IAAAA,WANU;AAOVC,IAAAA;AAPU,GAAd;AAUA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,KAA7B;AAAA,cACKtB,KAAK,CAACuB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArDM;;IAAMxB,Y;UACqBJ,U;;;KADrBI,Y","sourcesContent":["import React, {useState,useContext,useEffect} from 'react'\nimport {auth} from '../Auth/firebase'\nimport {useCookies} from 'react-cookie'\nconst AuthContext = React.createContext();\n\nexport function useAuth(){\n    return useContext(AuthContext)\n}\n\nexport const AuthProvider = (props) =>{\n    const [cookies, setCookies] = useCookies();\n\n    const [currentUser, setCurrentUser] = useState();\n\n    const signup = (email, password) => {\n        return auth.createUserWithEmailAndPassword(email,password);\n    }\n    \n    const login = (email, password) => {\n        return auth.signInWithEmailAndPassword(email,password);\n    }\n\n    const logout = () => {\n        cookies.remove(\"isLogged\", {path:\"/\"});\n        return auth.signOut();\n    }\n\n    const resetPassword = (email) => {\n        return auth.sendPasswordResetEmail(email);\n    }\n\n    const updateEmail = (email) =>{\n        return currentUser.updateEmail(email)\n    } \n\n\n    const updatePassword = (password) =>{\n        return currentUser.updatePassword(password)\n    } \n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged( user => { \n            setCurrentUser(user);\n        })\n        return unsubscribe\n    }, [])\n\n    const value = {\n        currentUser,\n        signup,\n        login,\n        logout,\n        resetPassword,\n        updateEmail,\n        updatePassword,\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}