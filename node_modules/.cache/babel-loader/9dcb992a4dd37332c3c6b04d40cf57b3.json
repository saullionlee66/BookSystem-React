{"ast":null,"code":"var _jsxFileName = \"/Users/saul/Documents/React/BookSystem/frontend/src/Components/Home.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Saul's Book System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This project contains two parts: One is classic CRUD demonstration. And the other one is industrial standard SignUp/Login practice.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"For the CRUD part, user can create, update and delete book info. It is built on full MERN tech stack, namely, MongoDB, Express, React and Node.JS.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The SignUp/Login part uses Firebase Authentication, including SignUp, Login with email/password, and Google Auth0 API. It also allow the user to update their password in the dashboard and reset the password if password has been forgotten. Also private routes have been setup for dashboard and update profile components. Login is needed for accessing these private routes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Used tech includes, but not limited to, MERN, axios, react-router-dom, material-ui, react-bootstrap, firebase, google auth0, react-cookies, etcs.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/saul/Documents/React/BookSystem/frontend/src/Components/Home.js"],"names":["React","Home"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,IAAT,GAAgB;AACZ,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;KApBQA,I;AAsBT,eAAeA,IAAf","sourcesContent":["import React from 'react'\n\nfunction Home() {\n    return (\n        <div>\n            <h1>Saul's Book System</h1>\n            <p>This project contains two parts: One is classic CRUD demonstration. And the other one is \n                industrial standard SignUp/Login practice.\n            </p>\n            <p>For the CRUD part, user can create, update and delete book info. It is built on full MERN tech\n                stack, namely, MongoDB, Express, React and Node.JS. \n            </p>\n            <p>The SignUp/Login part uses Firebase Authentication, including SignUp, Login with email/password,\n                and Google Auth0 API. It also allow the user to update their password in the dashboard and \n                reset the password if password has been forgotten. Also private routes have been setup for dashboard\n                and update profile components. Login is needed for accessing these private routes.\n            </p>\n            <p>Used tech includes, but not limited to, MERN, axios, react-router-dom, material-ui, react-bootstrap,\n                firebase, google auth0, react-cookies, etcs.\n            </p>\n        </div>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}